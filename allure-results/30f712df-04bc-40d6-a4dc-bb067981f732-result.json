{"name": "test_itm_instagram_connecting", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.fill: Timeout 30000ms exceeded.\nCall log:\nwaiting for get_by_label(\"Nazwa bankу\")", "trace": "playwright = <playwright._impl._playwright.Playwright object at 0x000002480FE970E0>\n\n    def test_itm_instagram_connecting(playwright: Playwright) -> None:\n        browser = playwright.chromium.launch(headless=False)\n        context = browser.new_context()\n        page = context.new_page()\n    \n        try:\n            email = register_user(page)\n>           fill_personal_info(page)\n\ntests\\test_example4.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\test_example4.py:30: in fill_personal_info\n    page.get_by_label(\"Nazwa bankу\").fill(\"Test\")\n..\\Desktop\\PlaywrightTest\\MissLiberte-TestAutomation\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15743: in fill\n    self._sync(\n..\\Desktop\\PlaywrightTest\\MissLiberte-TestAutomation\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:208: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n..\\Desktop\\PlaywrightTest\\MissLiberte-TestAutomation\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:527: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n..\\Desktop\\PlaywrightTest\\MissLiberte-TestAutomation\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000002480FE97EF0>, cb = <function Channel.send.<locals>.<lambda> at 0x0000024810003BA0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for get_by_label(\"Nazwa bankу\")\n\n..\\Desktop\\PlaywrightTest\\MissLiberte-TestAutomation\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:520: TimeoutError"}, "start": 1730803662849, "stop": 1730803697166, "uuid": "c391532c-31a3-48da-8198-0b89ecbcf117", "historyId": "3605fbeed82d12f976edd9393dd11dbb", "testCaseId": "3605fbeed82d12f976edd9393dd11dbb", "fullName": "tests.test_example4#test_itm_instagram_connecting", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_example4"}, {"name": "host", "value": "Pasola"}, {"name": "thread", "value": "13480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_example4"}]}